<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree toc="true" numbered="true" show-heading="true" show-metadata="true" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
  <fr:frontmatter>
    <fr:anchor>808</fr:anchor>
    <fr:addr type="machine">#245</fr:addr>
    <fr:route>unstable-245.xml</fr:route>
    <fr:title text="Sampling-based race detection › people"><fr:link type="local" href="dlws-0006.xml" addr="dlws-0006" title="Sampling-based race detection">Sampling-based race detection</fr:link> › people</fr:title>
    <fr:authors>
      <fr:author>
        <fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link>
      </fr:author>
    </fr:authors>
  </fr:frontmatter>
  <fr:mainmatter>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:anchor>350</fr:anchor>
        <fr:addr type="user">maheshviswanathan</fr:addr>
        <fr:route>maheshviswanathan.xml</fr:route>
        <fr:title text="Mahesh Viswanathan">Mahesh Viswanathan</fr:title>
        <fr:taxon>Person</fr:taxon>
        <fr:authors />
        <fr:meta name="external">https://vmahesh.cs.illinois.edu/</fr:meta>
        <fr:meta name="institution">
          <fr:link type="local" href="uiuc.xml" addr="uiuc" title="University of Illinois at Urbana-Champaign, USA">University of Illinois at Urbana-Champaign, USA</fr:link>
        </fr:meta>
      </fr:frontmatter>
      <fr:mainmatter />
      <fr:backmatter />
    </fr:tree>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:anchor>351</fr:anchor>
        <fr:addr type="user">minjianzhang</fr:addr>
        <fr:route>minjianzhang.xml</fr:route>
        <fr:title text="Minjian Zhang">Minjian Zhang</fr:title>
        <fr:taxon>Person</fr:taxon>
        <fr:authors />
        <fr:meta name="institution">
          <fr:link type="local" href="uiuc.xml" addr="uiuc" title="University of Illinois at Urbana-Champaign, USA">University of Illinois at Urbana-Champaign, USA</fr:link>
        </fr:meta>
        <fr:meta name="orcid">0000-0002-5017-2228</fr:meta>
        <fr:meta name="position">PhD Student</fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:p>PhD student at University of Illinois at Urbana-Champaign, USA.</fr:p>
      </fr:mainmatter>
      <fr:backmatter />
    </fr:tree>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:anchor>352</fr:anchor>
        <fr:addr type="user">mosaadalthokair</fr:addr>
        <fr:route>mosaadalthokair.xml</fr:route>
        <fr:title text="Mosaad Al Thokair">Mosaad Al Thokair</fr:title>
        <fr:taxon>Person</fr:taxon>
        <fr:authors />
        <fr:meta name="orcid">0000-0002-6832-0604</fr:meta>
      </fr:frontmatter>
      <fr:mainmatter />
      <fr:backmatter />
    </fr:tree>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:anchor>353</fr:anchor>
        <fr:addr type="user">umangmathur</fr:addr>
        <fr:route>umangmathur.xml</fr:route>
        <fr:title text="Umang Mathur">Umang Mathur</fr:title>
        <fr:taxon>Person</fr:taxon>
        <fr:authors />
        <fr:meta name="external">https://www.comp.nus.edu.sg/~umathur/</fr:meta>
        <fr:meta name="institution">
          <fr:link type="local" href="nus.xml" addr="nus" title="National University of Singapore">National University of Singapore</fr:link>
        </fr:meta>
        <fr:meta name="orcid">0000-0002-7610-0660</fr:meta>
        <fr:meta name="position">Assistant Professor</fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:p>Assistant Professor in Programming Languages &amp; Software Engineering at the National University of Singapore.</fr:p>
      </fr:mainmatter>
      <fr:backmatter />
    </fr:tree>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:title text="Context">Context</fr:title>
        <fr:authors />
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
          <fr:frontmatter>
            <fr:anchor>810</fr:anchor>
            <fr:addr type="user">dlws-0006</fr:addr>
            <fr:route>dlws-0006.xml</fr:route>
            <fr:title text="Sampling-based race detection">Sampling-based race detection</fr:title>
            <fr:taxon>Bibliography</fr:taxon>
            <fr:date>
              <fr:year>2024</fr:year>
              <fr:month>8</fr:month>
              <fr:day>23</fr:day>
            </fr:date>
            <fr:authors>
              <fr:author>
                <fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link>
              </fr:author>
            </fr:authors>
          </fr:frontmatter>
          <fr:mainmatter><fr:p>This page collects papers and dissertations about Sampling-based Race Detection; if you have written a paper or dissertation on this topic, please <fr:link type="external" href="mailto:dws.lim@nus.edu.sg">write to me</fr:link> to have it added to this list.</fr:p><fr:p>The works in this list focus on algorithms, techniques, or probabilistic guarantees for sampling-based race detection (or prediction). See <fr:link type="local" href="dlws-0004.xml" addr="dlws-0004" title="Race prediction">Race Prediction</fr:link> for works on race prediction in general.</fr:p>
  <fr:tree toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>331</fr:anchor><fr:addr type="machine">#242</fr:addr><fr:route>unstable-242.xml</fr:route><fr:title text="Papers">Papers</fr:title><fr:authors><fr:author><fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>333</fr:anchor><fr:addr type="user">thokair-zhang-mathur-viswanathan-rpt-2023</fr:addr><fr:route>thokair-zhang-mathur-viswanathan-rpt-2023.xml</fr:route><fr:title text="Dynamic Race Detection with O(1) Samples">Dynamic Race Detection with O(1) Samples</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2023</fr:year><fr:month>1</fr:month></fr:date><fr:authors><fr:author><fr:link type="local" href="zhendongang.xml" addr="zhendongang" title="Zhendong Ang">Zhendong Ang</fr:link></fr:author><fr:author><fr:link type="local" href="umangmathur.xml" addr="umangmathur" title="Umang Mathur">Umang Mathur</fr:link></fr:author></fr:authors><fr:meta name="bibtex"><![CDATA[@article{10.1145/3571238,
author = {Thokair, Mosaad Al and Zhang, Minjian and Mathur, Umang and Viswanathan, Mahesh},
title = {Dynamic Race Detection with O(1) Samples},
year = {2023},
issue_date = {January 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {POPL},
url = {https://doi.org/10.1145/3571238},
doi = {10.1145/3571238},
abstract = {Happens before-based dynamic analysis is the go-to technique for detecting data races in large scale software projects due to the absence of false positive reports. However, such analyses are expensive since they employ expensive vector clock updates at each event, rendering them usable only for in-house testing. In this paper, we present a sampling-based, randomized race detector that processes only constantly many events of the input trace even in the worst case. This is the first sub-linear time (i.e., running in o(n) time where n is the length of the trace) dynamic race detection algorithm; previous sampling based approaches like  run in linear time (i.e., O(n)). Our algorithm is a property tester for -race detection — it is sound in that it never reports any false positive, and on traces that are far, with respect to hamming distance, from any race-free trace, the algorithm detects an -race with high probability. Our experimental evaluation of the algorithm and its comparison with state-of-the-art deterministic and sampling based race detectors shows that the algorithm does indeed have significantly low running time, and detects races quite often.},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {45},
numpages = {30},
keywords = {Concurrency - Shared memory, Dynamic program analysis, Happens-before race detection, Property testing}
}]]></fr:meta><fr:meta name="doi">10.1145/3632915</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>336</fr:anchor><fr:addr type="user">bond-coons-mckinley-pacer-2010</fr:addr><fr:route>bond-coons-mckinley-pacer-2010.xml</fr:route><fr:title text="PACER: proportional detection of data races">PACER: proportional detection of data races</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2010</fr:year><fr:month>6</fr:month></fr:date><fr:authors><fr:author>Michael D. Bond</fr:author><fr:author>Katherine E. Coons</fr:author><fr:author>Kathryn S. McKinley</fr:author></fr:authors><fr:meta name="bibtex"><![CDATA[@article{10.1145/1809028.1806626,
author = {Bond, Michael D. and Coons, Katherine E. and McKinley, Kathryn S.},
title = {PACER: proportional detection of data races},
year = {2010},
issue_date = {June 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/1809028.1806626},
doi = {10.1145/1809028.1806626},
abstract = {Data races indicate serious concurrency bugs such as order, atomicity, and sequential consistency violations. Races are difficult to find and fix, often manifesting only after deployment. The frequency and unpredictability of these bugs will only increase as software adds parallelism to exploit multicore hardware. Unfortunately, sound and precise race detectors slow programs by factors of eight or more and do not scale to large numbers of threads.This paper presents a precise, low-overhead sampling-based data race detector called Pacer. PACER makes a proportionality guarantee: it detects any race at a rate equal to the sampling rate, by finding races whose first access occurs during a global sampling period. During sampling, PACER tracks all accesses using the dynamically sound and precise FastTrack algorithm. In nonsampling periods, Pacer discards sampled access information that cannot be part of a reported race, and Pacer simplifies tracking of the happens-before relationship, yielding near-constant, instead of linear, overheads. Experimental results confirm our theoretical guarantees. PACER reports races in proportion to the sampling rate. Its time and space overheads scale with the sampling rate, and sampling rates of 1-3\% yield overheads low enough to consider in production software. The resulting system provides a "get what you pay for" approach that is suitable for identifying real, hard-to-reproduce races in deployed systems.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {255–268},
numpages = {14},
keywords = {bugs, concurrency, data races, sampling}
}

@inproceedings{10.1145/1806596.1806626,
author = {Bond, Michael D. and Coons, Katherine E. and McKinley, Kathryn S.},
title = {PACER: proportional detection of data races},
year = {2010},
isbn = {9781450300193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1806596.1806626},
doi = {10.1145/1806596.1806626},
abstract = {Data races indicate serious concurrency bugs such as order, atomicity, and sequential consistency violations. Races are difficult to find and fix, often manifesting only after deployment. The frequency and unpredictability of these bugs will only increase as software adds parallelism to exploit multicore hardware. Unfortunately, sound and precise race detectors slow programs by factors of eight or more and do not scale to large numbers of threads.This paper presents a precise, low-overhead sampling-based data race detector called Pacer. PACER makes a proportionality guarantee: it detects any race at a rate equal to the sampling rate, by finding races whose first access occurs during a global sampling period. During sampling, PACER tracks all accesses using the dynamically sound and precise FastTrack algorithm. In nonsampling periods, Pacer discards sampled access information that cannot be part of a reported race, and Pacer simplifies tracking of the happens-before relationship, yielding near-constant, instead of linear, overheads. Experimental results confirm our theoretical guarantees. PACER reports races in proportion to the sampling rate. Its time and space overheads scale with the sampling rate, and sampling rates of 1-3\% yield overheads low enough to consider in production software. The resulting system provides a "get what you pay for" approach that is suitable for identifying real, hard-to-reproduce races in deployed systems.},
booktitle = {Proceedings of the 31st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {255–268},
numpages = {14},
keywords = {bugs, concurrency, data races, sampling},
location = {Toronto, Ontario, Canada},
series = {PLDI '10}
}]]></fr:meta><fr:meta name="doi">10.1145/1809028.1806626</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>340</fr:anchor><fr:addr type="user">marino-musuvathi-narayanasamy-literace-2009</fr:addr><fr:route>marino-musuvathi-narayanasamy-literace-2009.xml</fr:route><fr:title text="LiteRace: effective sampling for lightweight data-race detection">LiteRace: effective sampling for lightweight data-race detection</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2009</fr:year><fr:month>6</fr:month></fr:date><fr:authors><fr:author>Daniel Marino</fr:author><fr:author>Madanlal Musuvathi</fr:author><fr:author>Satish Narayanasamy</fr:author></fr:authors><fr:meta name="bibtex"><![CDATA[@inproceedings{10.1145/1542476.1542491,
author = {Marino, Daniel and Musuvathi, Madanlal and Narayanasamy, Satish},
title = {LiteRace: effective sampling for lightweight data-race detection},
year = {2009},
isbn = {9781605583921},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1542476.1542491},
doi = {10.1145/1542476.1542491},
abstract = {Data races are one of the most common and subtle causes of pernicious concurrency bugs. Static techniques for preventing data races are overly conservative and do not scale well to large programs. Past research has produced several dynamic data race detectors that can be applied to large programs. They are precise in the sense that they only report actual data races. However, dynamic data race detectors incur a high performance overhead, slowing down a program's execution by an order of magnitude.In this paper we present LiteRace, a very lightweight data race detector that samples and analyzes only selected portions of a program's execution. We show that it is possible to sample a multithreaded program at a low frequency, and yet, find infrequently occurring data races. We implemented LiteRace using Microsoft's Phoenix compiler. Our experiments with several Microsoft programs, Apache, and Firefox show that LiteRace is able to find more than 70\% of data races by sampling less than 2\% of memory accesses in a given program execution.},
booktitle = {Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {134–143},
numpages = {10},
keywords = {concurrency bugs, dynamic data race detection, sampling},
location = {Dublin, Ireland},
series = {PLDI '09}
}

@article{10.1145/1543135.1542491,
author = {Marino, Daniel and Musuvathi, Madanlal and Narayanasamy, Satish},
title = {LiteRace: effective sampling for lightweight data-race detection},
year = {2009},
issue_date = {June 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {44},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/1543135.1542491},
doi = {10.1145/1543135.1542491},
abstract = {Data races are one of the most common and subtle causes of pernicious concurrency bugs. Static techniques for preventing data races are overly conservative and do not scale well to large programs. Past research has produced several dynamic data race detectors that can be applied to large programs. They are precise in the sense that they only report actual data races. However, dynamic data race detectors incur a high performance overhead, slowing down a program's execution by an order of magnitude.In this paper we present LiteRace, a very lightweight data race detector that samples and analyzes only selected portions of a program's execution. We show that it is possible to sample a multithreaded program at a low frequency, and yet, find infrequently occurring data races. We implemented LiteRace using Microsoft's Phoenix compiler. Our experiments with several Microsoft programs, Apache, and Firefox show that LiteRace is able to find more than 70\% of data races by sampling less than 2\% of memory accesses in a given program execution.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {134–143},
numpages = {10},
keywords = {concurrency bugs, dynamic data race detection, sampling}
}]]></fr:meta><fr:meta name="doi">10.1145/1542476.1542491</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>


  <fr:tree toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>344</fr:anchor><fr:addr type="machine">#243</fr:addr><fr:route>unstable-243.xml</fr:route><fr:title text="Talks">Talks</fr:title><fr:authors><fr:author><fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:info>Query returned no results</fr:info></fr:p></fr:mainmatter><fr:backmatter /></fr:tree>

  <fr:tree toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>346</fr:anchor><fr:addr type="machine">#244</fr:addr><fr:route>unstable-244.xml</fr:route><fr:title text="Dissertations">Dissertations</fr:title><fr:authors><fr:author><fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:info>Query returned no results</fr:info></fr:p></fr:mainmatter><fr:backmatter /></fr:tree>

  <fr:tree toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>348</fr:anchor><fr:addr type="machine">#245</fr:addr><fr:route>unstable-245.xml</fr:route><fr:title text="People">People</fr:title><fr:authors><fr:author><fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>350</fr:anchor><fr:addr type="user">maheshviswanathan</fr:addr><fr:route>maheshviswanathan.xml</fr:route><fr:title text="Mahesh Viswanathan">Mahesh Viswanathan</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta name="external">https://vmahesh.cs.illinois.edu/</fr:meta><fr:meta name="institution"><fr:link type="local" href="uiuc.xml" addr="uiuc" title="University of Illinois at Urbana-Champaign, USA">University of Illinois at Urbana-Champaign, USA</fr:link></fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>351</fr:anchor><fr:addr type="user">minjianzhang</fr:addr><fr:route>minjianzhang.xml</fr:route><fr:title text="Minjian Zhang">Minjian Zhang</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta name="institution"><fr:link type="local" href="uiuc.xml" addr="uiuc" title="University of Illinois at Urbana-Champaign, USA">University of Illinois at Urbana-Champaign, USA</fr:link></fr:meta><fr:meta name="orcid">0000-0002-5017-2228</fr:meta><fr:meta name="position">PhD Student</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>PhD student at University of Illinois at Urbana-Champaign, USA.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>352</fr:anchor><fr:addr type="user">mosaadalthokair</fr:addr><fr:route>mosaadalthokair.xml</fr:route><fr:title text="Mosaad Al Thokair">Mosaad Al Thokair</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta name="orcid">0000-0002-6832-0604</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>353</fr:anchor><fr:addr type="user">umangmathur</fr:addr><fr:route>umangmathur.xml</fr:route><fr:title text="Umang Mathur">Umang Mathur</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta name="external">https://www.comp.nus.edu.sg/~umathur/</fr:meta><fr:meta name="institution"><fr:link type="local" href="nus.xml" addr="nus" title="National University of Singapore">National University of Singapore</fr:link></fr:meta><fr:meta name="orcid">0000-0002-7610-0660</fr:meta><fr:meta name="position">Assistant Professor</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Assistant Professor in Programming Languages &amp; Software Engineering at the National University of Singapore.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>
</fr:mainmatter>
          <fr:backmatter />
        </fr:tree>
      </fr:mainmatter>
      <fr:backmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
