<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree toc="true" numbered="true" show-heading="true" show-metadata="true" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
  <fr:frontmatter>
    <fr:anchor>302</fr:anchor>
    <fr:addr type="machine">#242</fr:addr>
    <fr:route>unstable-242.xml</fr:route>
    <fr:title text="Wasmtime performance › writeups"><fr:link type="local" href="wasm-0001.xml" addr="wasm-0001" title="Wasmtime performance">Wasmtime performance</fr:link> › writeups</fr:title>
    <fr:date>
      <fr:year>2025</fr:year>
      <fr:month>3</fr:month>
      <fr:day>28</fr:day>
    </fr:date>
    <fr:authors>
      <fr:author>
        <fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link>
      </fr:author>
    </fr:authors>
  </fr:frontmatter>
  <fr:mainmatter>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:anchor>291</fr:anchor>
        <fr:addr type="user">ffmpeg-0001</fr:addr>
        <fr:route>ffmpeg-0001.xml</fr:route>
        <fr:title text="Building FFmpeg for Wasm">Building FFmpeg for Wasm</fr:title>
        <fr:taxon>Experiment</fr:taxon>
        <fr:date>
          <fr:year>2025</fr:year>
          <fr:month>3</fr:month>
          <fr:day>28</fr:day>
        </fr:date>
        <fr:authors />
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:p>Unfortunately, building FFmpeg 7.0 with wasi-sdk is not straightforward at the moment, and I will defer this to the future when I have more time.</fr:p>
        <fr:p>In particular, I faced two issues.</fr:p>
        <fr:ol><fr:li>The <fr:code>dup</fr:code> syscall is not supported by wasi-libc (as well as wasip1 and wasip2). This can be worked around by commenting out code that uses <fr:code>dup</fr:code> but I am not sure what the repercussions are.</fr:li>
<fr:li>FFmpeg 6.0 onwards forces building with multithreading support. Although wasi support emulated threading, linking fails when building with emulated signaling, which is also needed by the project. The error given is that the signal object file is not compiled with multithreading support, and thus cannot be linked with the rest of the executable.</fr:li></fr:ol>
        <fr:p>I also tried emscripten but I was not successful in using it to produce a standalone Wasm executable that can be executed like a normal command-line application.
It always produces a Wasm file that can only be used with a JS glue.</fr:p>
      </fr:mainmatter>
      <fr:backmatter />
    </fr:tree>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree toc="false" numbered="false" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
      <fr:frontmatter>
        <fr:title text="Context">Context</fr:title>
        <fr:authors />
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml">
          <fr:frontmatter>
            <fr:anchor>304</fr:anchor>
            <fr:addr type="user">wasm-0001</fr:addr>
            <fr:route>wasm-0001.xml</fr:route>
            <fr:title text="Wasmtime performance">Wasmtime performance</fr:title>
            <fr:date>
              <fr:year>2025</fr:year>
              <fr:month>3</fr:month>
              <fr:day>28</fr:day>
            </fr:date>
            <fr:authors>
              <fr:author>
                <fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link>
              </fr:author>
            </fr:authors>
            <fr:meta name="author">false</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter><fr:p>I am embarking on a journey to learn more about the performance of Wasmtime and how close it is to native programs. Here lies my writings about experiments and deep dives into the inner workings of Wasmtime and Cranelift.</fr:p>
  <fr:tree toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>289</fr:anchor><fr:addr type="machine">#242</fr:addr><fr:route>unstable-242.xml</fr:route><fr:title text="Writeups">Writeups</fr:title><fr:date><fr:year>2025</fr:year><fr:month>3</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link type="local" href="daniellimws.xml" addr="daniellimws" title="Daniel Lim Wee Soong">Daniel Lim Wee Soong</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree toc="false" numbered="false" show-heading="true" show-metadata="true" expanded="false" root="false" xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>291</fr:anchor><fr:addr type="user">ffmpeg-0001</fr:addr><fr:route>ffmpeg-0001.xml</fr:route><fr:title text="Building FFmpeg for Wasm">Building FFmpeg for Wasm</fr:title><fr:taxon>Experiment</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>3</fr:month><fr:day>28</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>Unfortunately, building FFmpeg 7.0 with wasi-sdk is not straightforward at the moment, and I will defer this to the future when I have more time.</fr:p><fr:p>In particular, I faced two issues.</fr:p><fr:ol><fr:li>The <fr:code>dup</fr:code> syscall is not supported by wasi-libc (as well as wasip1 and wasip2). This can be worked around by commenting out code that uses <fr:code>dup</fr:code> but I am not sure what the repercussions are.</fr:li>
<fr:li>FFmpeg 6.0 onwards forces building with multithreading support. Although wasi support emulated threading, linking fails when building with emulated signaling, which is also needed by the project. The error given is that the signal object file is not compiled with multithreading support, and thus cannot be linked with the rest of the executable.</fr:li></fr:ol><fr:p>I also tried emscripten but I was not successful in using it to produce a standalone Wasm executable that can be executed like a normal command-line application.
It always produces a Wasm file that can only be used with a JS glue.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>
</fr:mainmatter>
          <fr:backmatter />
        </fr:tree>
      </fr:mainmatter>
      <fr:backmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
