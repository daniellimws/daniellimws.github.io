<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>475</fr:anchor><fr:addr
type="user">azadehfarzan</fr:addr><fr:route>azadehfarzan.xml</fr:route><fr:title
text="Azadeh Farzan">Azadeh Farzan</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta
name="external">https://www.cs.toronto.edu/~azadeh/index.html</fr:meta><fr:meta
name="institution"><fr:link
type="local"
href="uoft.xml"
addr="uoft"
title="University of Toronto">University of Toronto</fr:link></fr:meta><fr:meta
name="orcid">0000-0001-9005-2653</fr:meta><fr:meta
name="position">Professor</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Professor at University of Toronto.</fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>476</fr:anchor><fr:addr
type="user">uoft</fr:addr><fr:route>uoft.xml</fr:route><fr:title
text="University of Toronto">University of Toronto</fr:title><fr:taxon>Institution</fr:taxon><fr:authors /><fr:meta
name="external">https://www.utoronto.ca/</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Contributions">Contributions</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>477</fr:anchor><fr:addr
type="user">farzan-grain-2024-iarcs</fr:addr><fr:route>farzan-grain-2024-iarcs.xml</fr:route><fr:title
text="Coarser Equivalences for Causal Concurrency">Coarser Equivalences for Causal Concurrency</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month></fr:date><fr:authors><fr:author><fr:link
type="local"
href="azadehfarzan.xml"
addr="azadehfarzan"
title="Azadeh Farzan">Azadeh Farzan</fr:link></fr:author></fr:authors><fr:meta
name="external">https://www.youtube.com/watch?v=hYJv7Pf53yU</fr:meta><fr:meta
name="venue">IARCS Verification Seminar</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>479</fr:anchor><fr:addr
type="user">farzan-mathur-grain-2024</fr:addr><fr:route>farzan-mathur-grain-2024.xml</fr:route><fr:title
text="Coarser Equivalences for Causal Concurrency">Coarser Equivalences for Causal Concurrency</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month></fr:date><fr:authors><fr:author><fr:link
type="local"
href="azadehfarzan.xml"
addr="azadehfarzan"
title="Azadeh Farzan">Azadeh Farzan</fr:link></fr:author><fr:author><fr:link
type="local"
href="umangmathur.xml"
addr="umangmathur"
title="Umang Mathur">Umang Mathur</fr:link></fr:author></fr:authors><fr:meta
name="bibtex"><![CDATA[@article{10.1145/3632873,
author = {Farzan, Azadeh and Mathur, Umang},
title = {Coarser Equivalences for Causal Concurrency},
year = {2024},
issue_date = {January 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {POPL},
url = {https://doi.org/10.1145/3632873},
doi = {10.1145/3632873},
abstract = {Trace theory (formulated by Mazurkiewicz in 1987) is a principled framework for defining equivalence relations for concurrent program runs based on a commutativity relation over the set of atomic steps taken by individual program threads. Its simplicity, elegance, and algorithmic efficiency makes it useful in many different contexts including program verification and testing. It is well-understood that the larger the equivalence classes are, the more benefits they would bring to the algorithms and applications that use them. In this paper, we study relaxations of trace equivalence with the goal of maintaining its algorithmic advantages. We first prove that the largest appropriate relaxation of trace equivalence, an equivalence relation that preserves the order of steps taken by each thread and what write operation each read operation observes, does not yield efficient algorithms. Specifically, we prove a linear space lower bound for the problem of checking, in a streaming setting, if two arbitrary steps of a concurrent program run are causally concurrent (i.e. they can be reordered in an equivalent run) or causally ordered (i.e. they always appear in the same order in all equivalent runs). The same problem can be decided in constant space for trace equivalence. Next, we propose a new commutativity-based notion of equivalence called grain equivalence that is strictly more relaxed than trace equivalence, and yet yields a constant space algorithm for the same problem. This notion of equivalence uses commutativity of grains, which are sequences of atomic steps, in addition to the standard commutativity from trace theory. We study the two distinct cases when the grains are contiguous subwords of the input program run and when they are not, formulate the precise definition of causal concurrency in each case, and show that they can be decided in constant space, despite being strict relaxations of the notion of causal concurrency based on trace equivalence.},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {31},
numpages = {31},
keywords = {concurrency, equivalence, predictive analysis, reads-from, reduction}
}]]></fr:meta><fr:meta
name="doi">10.1145/3632873</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>